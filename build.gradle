def loadProperties(String sourceFileName) {
    def config = new Properties()
    def propFile = new File(sourceFileName)
    System.err.println("Loading property file: " + propFile.absolutePath)
    if (propFile.canRead()) {
        config.load(new FileInputStream(propFile))
        for (Map.Entry property in config) {
            System.out.println("setting " + property.key)
            project.ext[property.key] = property.value
        }
    }
}

loadProperties("local.properties")

buildscript {
    ext.kotlin_version = '1.4.20'
    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'https://oss.sonatype.org/service/local/repositories/releases/content/' }
        google()
        mavenCentral()
        jcenter()
        maven { url "https://jitpack.io" }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.4'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

allprojects {
    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'https://oss.sonatype.org/service/local/repositories/releases/content/' }
        google()
        mavenCentral()
        jcenter()
        maven { url "https://jitpack.io" }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

subprojects {
    apply plugin: 'com.android.library'
    android {
        compileSdkVersion 30

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }

        defaultConfig {
            minSdkVersion 21
            targetSdkVersion 30

            versionCode 200
            versionName "${versionCode}"

            multiDexEnabled true
        }

        lintOptions {
            abortOnError false
            disable "ResourceType"
            warning 'NewApi', 'OnClick', 'EllipsizeMaxLines'
        }

        buildTypes {
            release {
                minifyEnabled false
                shrinkResources false
            }
            debug {
                minifyEnabled false
                shrinkResources false
            }
        }
    }

}

subprojects {
    apply plugin: 'maven'
    apply plugin: 'signing'

    signing {
        required { gradle.taskGraph.hasTask('uploadArchives') }
        sign configurations.archives
    }
    
    uploadArchives {
        repositories.mavenDeployer {
            repository(url: 'https://oss.sonatype.org/service/local/staging/deploy/maven2/') {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }

            configuration = configurations.archives

            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            pom.artifactId = project.name
            pom.version = project.version
            pom.groupId = "com.rover12421.android.hide"

            pom.project {
                name project.name
                description "Android Hidden API / $project.name"
                url 'https://shaka.rover.plus'
                packaging 'aar'
                licenses {
                    license {
                        name 'MIT License'
                        url 'https://opensource.org/licenses/mit-license.php'
                        distribution 'repo'
                    }
                }
                scm {
                    url 'https://github.com/rover12421/AndroidHideApi/tree/master'
                    connection 'scm:git:git://github.com/rover12421/AndroidHideApi.git'
                    developerConnection 'scm:git:git@github.com:rover12421/AndroidHideApi.git'
                }
                developers {
                    developer {
                        id 'rover12421'
                        name 'Rover12421'
                        email 'rover12421@163.com'
                    }
                }
            }
        }
    }

}